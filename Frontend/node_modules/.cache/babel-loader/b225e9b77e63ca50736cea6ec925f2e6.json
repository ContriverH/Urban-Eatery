{"ast":null,"code":"var _jsxFileName = \"/home/nishi/project/v1/Urban-Eatery-1/Frontend/src/components/SignUp/SignUp.js\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Logo from \"../../images/logo2.png\";\nimport \"./SignUp.css\";\nimport { useAuth } from \"./useAuth\";\n\nconst SignUp = () => {\n  const [returningUser, setReturningUser] = useState(true);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const auth = useAuth();\n\n  const onSubmit = data => {\n    if (returningUser) {\n      if (data.email && data.password) {\n        auth.signIn(data.email, data.password);\n      }\n    } else {\n      if (data.name && data.email && data.password && data.confirm_password) {\n        auth.signUp(data.email, data.confirm_password, data.name);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo text-center py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }))), returningUser ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"lead text-center py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Welcome back!\"), auth.user != null && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"* \", auth.user.error), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 32\n    }\n  }, \"Email is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Password is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \" or \")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success  btn-block\",\n    onClick: auth.signInWithGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option text-center my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    onClick: () => setReturningUser(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Create a new Account\"))) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"py-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, auth.user != null && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"* \", auth.user.error), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    className: \"form-control\",\n    ref: register({\n      required: \"Name is required\"\n    }),\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    className: \"form-control\",\n    ref: register({\n      required: \"Email is required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Invalid email address\"\n      }\n    }),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, errors.email && errors.email.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    ref: register({\n      required: \"Password is required\",\n      pattern: {\n        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/i,\n        message: \"Minimum eight characters, at least one uppercase letter, one lowercase letter and one number\"\n      }\n    }),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, errors.password && errors.password.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirm_password\",\n    className: \"form-control\",\n    ref: register({\n      validate: value => value === watch(\"password\")\n    }),\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }), errors.confirm_password && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Passwords don't match.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option text-center my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    onClick: () => setReturningUser(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Already Have an Account\")))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/nishi/project/v1/Urban-Eatery-1/Frontend/src/components/SignUp/SignUp.js"],"names":["React","useState","useForm","Link","Redirect","Logo","useAuth","SignUp","returningUser","setReturningUser","register","handleSubmit","watch","errors","auth","onSubmit","data","email","password","signIn","name","confirm_password","signUp","user","error","required","signInWithGoogle","pattern","value","message","validate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Logo from \"../../images/logo2.png\";\nimport \"./SignUp.css\";\nimport { useAuth } from \"./useAuth\";\n\nconst SignUp = () => {\n  const [returningUser, setReturningUser] = useState(true);\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  const auth = useAuth();\n\n  const onSubmit = (data) => {\n    if (returningUser) {\n      if (data.email && data.password) {\n        auth.signIn(data.email, data.password);\n      }\n    } else {\n      if (data.name && data.email && data.password && data.confirm_password) {\n        auth.signUp(data.email, data.confirm_password, data.name);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <div className=\"container\">\n        <div className=\"logo text-center py-4\">\n          <Link to=\"/\">\n            <img src={Logo} alt=\"\" />\n          </Link>\n        </div>\n        {returningUser ? (\n          <form onSubmit={handleSubmit(onSubmit)} className=\"py-3\">\n            <h1 className=\"lead text-center py-3\">Welcome back!</h1>\n            {auth.user != null && (\n              <p className=\"text-danger\">* {auth.user.error}</p>\n            )}\n\n            <div className=\"form-group\">\n              <input\n                name=\"email\"\n                className=\"form-control\"\n                ref={register({ required: true })}\n                placeholder=\"Email\"\n              />\n              {errors.email && <span className=\"error\">Email is required</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"form-control\"\n                ref={register({ required: true })}\n                placeholder=\"Password\"\n              />\n              {errors.password && (\n                <span className=\"error\">Password is required</span>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <button className=\"btn btn-danger btn-block\" type=\"submit\">\n                Sign In\n              </button>\n            </div>\n\n            <div className=\"text-center my-0\">\n              <label> or </label>\n            </div>\n\n            <button\n              className=\"btn btn-success  btn-block\"\n              onClick={auth.signInWithGoogle}\n            >\n              Sign in with Google\n            </button>\n            <div className=\"option text-center my-3\">\n              <label onClick={() => setReturningUser(false)}>\n                Create a new Account\n              </label>\n            </div>\n           \n          </form>\n        ) : (\n          <form onSubmit={handleSubmit(onSubmit)} className=\"py-5\">\n            {auth.user != null && (\n              <p className=\"text-danger\">* {auth.user.error}</p>\n            )}\n\n            <div className=\"form-group\">\n              <input\n                name=\"name\"\n                className=\"form-control\"\n                ref={register({\n                  required: \"Name is required\",\n                })}\n                placeholder=\"Name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                name=\"email\"\n                className=\"form-control\"\n                ref={register({\n                  required: \"Email is required\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: \"Invalid email address\",\n                  },\n                })}\n                placeholder=\"Email\"\n              />\n              <span className=\"error\">\n                {errors.email && errors.email.message}\n              </span>\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"form-control\"\n                ref={register({\n                  required: \"Password is required\",\n                  pattern: {\n                    value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/i,\n                    message:\n                      \"Minimum eight characters, at least one uppercase letter, one lowercase letter and one number\",\n                  },\n                })}\n                placeholder=\"Password\"\n              />\n              <span className=\"error\">\n                {errors.password && errors.password.message}\n              </span>\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                name=\"confirm_password\"\n                className=\"form-control\"\n                ref={register({\n                  validate: (value) => value === watch(\"password\"),\n                })}\n                placeholder=\"Confirm Password\"\n              />\n              {errors.confirm_password && (\n                <span className=\"error\">Passwords don't match.</span>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <button className=\"btn btn-danger btn-block\" type=\"submit\">\n                Sign Up\n              </button>\n            </div>\n\n            <div className=\"option text-center my-3\">\n              <label onClick={() => setReturningUser(true)}>\n                Already Have an Account\n              </label>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}